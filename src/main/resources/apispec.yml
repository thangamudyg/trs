openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/THANGAMUDYGURUSAMY_1/trs/1.0.1
info:
  version: 1.0.1
  title: trs-api
  description: The API for the TRS project
  contact:
    email: "thangamudy.gurusamy@gmail.com"
paths:
  /view-seat/{user-id}:
    post:
      tags:
        - Seat View
      description: returns all available seat for the section
      operationId: getSeat
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Boarding'
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All the receipts
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Section'
  /receipts/{user-id}:
    get:
      tags:
        - Receipt
      description: returns all receipts for the user
      operationId: getReceipt
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All the receipts
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Receipt'
  /buy-ticket/{user-id}:
    post:
      tags:
        - Buy Ticket
      description: returns receipt for booking
      operationId: buyTicket
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Boarding'
      parameters:
        - name: user-id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All the receipts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
  /passenger/{train-number}:
    get:
      tags:
        - Passenger List
      description: returns all the passenger list
      operationId: gePassengerList
      parameters:
        - name: train-number
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: All the passenger list
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Passenger'
components:
  schemas:
    Passenger:
      type: object
      properties:
        booking :
          $ref: '#/components/schemas/Booking'
        user :
          $ref: '#/components/schemas/User'
    Receipt:
      type: object
      properties:
        receipt_id:
          type: integer
          format: int32
        from_station:
          type: string
        to_station:
          type: string
        price:
          type: number
          format: double
        booking :
          $ref: '#/components/schemas/Booking'
        user :
          $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
    Boarding:
      type: object
      properties:
        train_number:
          type: integer
          format: int32
        from_station:
          type: string
        to_station:
          type: string
    Section:
      type: object
      properties:
        train_number:
          type: integer
          format: int32
        section_name:
          type: string
        seat_number:
          type: integer
          format: int32
    Booking:
      type: object
      properties:
        train_number:
          type: integer
          format: int32
        section_name:
          type: string
        seat_number:
          type: string
    Train:
      type: object
      properties:
        train_number:
          type: integer
          format: int32
        train_name:
          type: string